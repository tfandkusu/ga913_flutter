// Mocks generated by Mockito 5.4.4 from annotations
// in ga913_flutter/test/screen/home/home_event_handler_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:ga913_flutter/data/repository/landmark_list_notifier.dart'
    as _i4;
import 'package:ga913_flutter/data/repository/landmark_repository.dart' as _i7;
import 'package:ga913_flutter/model/landmark.dart' as _i6;
import 'package:ga913_flutter/screen/home/home_ui_model.dart' as _i3;
import 'package:ga913_flutter/screen/home/home_ui_state_notifier.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:riverpod_annotation/riverpod_annotation.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAutoDisposeNotifierProviderRef_0<T> extends _i1.SmartFake
    implements _i2.AutoDisposeNotifierProviderRef<T> {
  _FakeAutoDisposeNotifierProviderRef_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHomeUiModel_1 extends _i1.SmartFake implements _i3.HomeUiModel {
  _FakeHomeUiModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLandmarkListNotifier_2 extends _i1.SmartFake
    implements _i4.LandmarkListNotifier {
  _FakeLandmarkListNotifier_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeUiModelNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeUiModelNotifier extends _i1.Mock
    implements _i5.HomeUiModelNotifier {
  MockHomeUiModelNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AutoDisposeNotifierProviderRef<_i3.HomeUiModel> get ref =>
      (super.noSuchMethod(
        Invocation.getter(#ref),
        returnValue: _FakeAutoDisposeNotifierProviderRef_0<_i3.HomeUiModel>(
          this,
          Invocation.getter(#ref),
        ),
      ) as _i2.AutoDisposeNotifierProviderRef<_i3.HomeUiModel>);

  @override
  _i3.HomeUiModel get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeHomeUiModel_1(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.HomeUiModel);

  @override
  set state(_i3.HomeUiModel? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.HomeUiModel build() => (super.noSuchMethod(
        Invocation.method(
          #build,
          [],
        ),
        returnValue: _FakeHomeUiModel_1(
          this,
          Invocation.method(
            #build,
            [],
          ),
        ),
      ) as _i3.HomeUiModel);

  @override
  void setProgress(bool? progress) => super.noSuchMethod(
        Invocation.method(
          #setProgress,
          [progress],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setFavoritesOnly(bool? favoritesOnly) => super.noSuchMethod(
        Invocation.method(
          #setFavoritesOnly,
          [favoritesOnly],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setLandmarks(List<_i6.Landmark>? landmarks) => super.noSuchMethod(
        Invocation.method(
          #setLandmarks,
          [landmarks],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void listenSelf(
    void Function(
      _i3.HomeUiModel?,
      _i3.HomeUiModel,
    )? listener, {
    void Function(
      Object,
      StackTrace,
    )? onError,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #listenSelf,
          [listener],
          {#onError: onError},
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool updateShouldNotify(
    _i3.HomeUiModel? previous,
    _i3.HomeUiModel? next,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            previous,
            next,
          ],
        ),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [LandmarkRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLandmarkRepository extends _i1.Mock
    implements _i7.LandmarkRepository {
  MockLandmarkRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.LandmarkListNotifier get landmarkListNotifier => (super.noSuchMethod(
        Invocation.getter(#landmarkListNotifier),
        returnValue: _FakeLandmarkListNotifier_2(
          this,
          Invocation.getter(#landmarkListNotifier),
        ),
      ) as _i4.LandmarkListNotifier);

  @override
  _i8.Future<void> fetchLandmarks() => (super.noSuchMethod(
        Invocation.method(
          #fetchLandmarks,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}
