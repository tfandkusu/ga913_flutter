// Mocks generated by Mockito 5.4.4 from annotations
// in ga913_flutter/test/screen/detail/detail_event_handler_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:data/data.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LandmarkListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockLandmarkListNotifier extends _i1.Mock
    implements _i2.LandmarkListNotifier {
  MockLandmarkListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i2.Landmark> build() => (super.noSuchMethod(
        Invocation.method(
          #build,
          [],
        ),
        returnValue: <_i2.Landmark>[],
      ) as List<_i2.Landmark>);

  @override
  void setLandmarkList(List<_i2.Landmark>? landmarkList) => super.noSuchMethod(
        Invocation.method(
          #setLandmarkList,
          [landmarkList],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setFavorite(
    int? id,
    bool? isFavorite,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setFavorite,
          [
            id,
            isFavorite,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
